<Window x:Class="Gu.Wpf.Media.Demo.UiTestWindows.TestPlayerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Gu.Wpf.Media.Demo.UiTestWindows"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
        Title="TestPlayerWindow"
        d:DataContext="{d:DesignInstance local:TestPlayerViewModel}"
        mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="{x:Type ButtonBase}">
            <Setter Property="AutomationProperties.AutomationId" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content}" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <media:MediaElementWrapper x:Name="MediaElement" />
            <GroupBox Grid.Column="1" Header="Properties">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <GroupBox Header="SelectedProperty">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Text="Selected" />
                            <TextBox x:Name="SelectedPropertyNameTextBox"
                                 Grid.Row="0"
                                 Grid.Column="1"
                                 Text="{Binding SelectedPropertyName,
                                                UpdateSourceTrigger=PropertyChanged}" />

                            <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Text="Value" />
                            <TextBox x:Name="ValueTextBox"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 IsEnabled="{Binding SelectedProperty.Property.ReadOnly,
                                                     Converter={x:Static local:InvertBoolConverter.Default}}"
                                 Text="{Binding SelectedProperty.Value,
                                                Converter={x:Static local:NullConverter.Default}}" />

                            <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Text="Value" />
                            <Button x:Name="LoseFocusButton"
                                Grid.Row="2"
                                Grid.Column="1"
                                Content="Lose focus" />
                        </Grid>
                    </GroupBox>
                    <DataGrid Grid.Row="1"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Properties}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Property.Name}"
                                            Header="Property"
                                            IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding Property.ReadOnly}"
                                            Header="ReadOnly"
                                            IsReadOnly="True" />
                            <DataGridTextColumn MaxWidth="100"
                                            Binding="{Binding Value,
                                                              Converter={x:Static local:NullConverter.Default}}"
                                            Header="Value"
                                            IsReadOnly="False" />
                            <!--<DataGridTemplateColumn MaxWidth="100" Header="Value">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type local:PropertyItem}">
                                    <TextBox IsReadOnly="{Binding Property.ReadOnly}"
                                             IsReadOnlyCaretVisible="True"
                                             BorderThickness="0"
                                             Text="{Binding Value,
                                                            Converter={x:Static local:NullConverter.Default}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>


                        <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate DataType="{x:Type local:PropertyItem}">
                                    <TextBox IsReadOnly="{Binding Property.ReadOnly}"
                                             IsReadOnlyCaretVisible="True"
                                             Text="{Binding Value,
                                                            Converter={x:Static local:NullConverter.Default}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Column="2" Header="Commands">
                <StackPanel>
                    <Button Command="Play"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="Play" />

                    <Button Command="Pause"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="Pause" />

                    <Button Command="TogglePlayPause"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="TogglePlayPause" />

                    <ToggleButton x:Name="BoundPlayPause"
                              Content="BoundPlayPause"
                              IsChecked="{Binding ElementName=MediaElement,
                                                  Path=IsPlaying}" />

                    <Button Command="MediaCommands.Stop"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="Stop" />

                    <Button Command="Rewind"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="Rewind" />

                    <Button Command="media:Commands.ToggleMute"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="ToggleMute" />

                    <ToggleButton x:Name="BoundToggleMute"
                              Content="BoundToggleMute"
                              IsChecked="{Binding ElementName=MediaElement,
                                                  Path=IsMuted}" />

                    <Button Command="MuteVolume"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="MuteVolume" />

                    <Button Command="media:Commands.UnmuteVolume"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="UnmuteVolume" />

                    <Button Command="DecreaseVolume"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="DecreaseVolume" />

                    <Button x:Name="DecreaseVolumeByOne"
                        Command="DecreaseVolume"
                        CommandParameter="1"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="DecreaseVolumeByOne" />

                    <Button x:Name="DecreaseVolumeByZeroPointOne"
                        Command="DecreaseVolume"
                        CommandParameter="1"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="DecreaseVolumeByZeroPointOne" />

                    <Button Command="IncreaseVolume"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="IncreaseVolume" />

                    <Button x:Name="IncreaseVolumeByOne"
                        Command="IncreaseVolume"
                        CommandParameter="1"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="IncreaseVolumeByOne" />

                    <Button x:Name="IncreaseVolumeByZeroPointOne"
                        Command="IncreaseVolume"
                        CommandParameter="0.1"
                        CommandTarget="{Binding ElementName=MediaElement}"
                        Content="IncreaseVolumeByZeroPointOne" />
                </StackPanel>
            </GroupBox>
        </Grid>
        <TextBox Grid.Row="1" Text="{Binding CoffeClipFileName, Mode=OneWay}" IsReadOnly="True" IsReadOnlyCaretVisible="True"></TextBox>
    </Grid>

</Window>
