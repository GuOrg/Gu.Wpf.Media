<Window x:Class="Gu.Wpf.Media.Demo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:demo="clr-namespace:Gu.Wpf.Media.Demo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
        xmlns:uiTestWindows="clr-namespace:Gu.Wpf.Media.Demo.UiTestWindows"
        Title="MainWindow"
        MinWidth="300"
        AllowDrop="True"
        Background="{DynamicResource {x:Static media:Brushes.BackgroundBrushKey}}"
        Drop="OnDrop"
        SizeToContent="WidthAndHeight"
        mc:Ignorable="d">
    <Window.InputBindings>
        <KeyBinding Key="Space"
                    Command="TogglePlayPause"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <KeyBinding Key="F11"
                    Command="media:Commands.ToggleFullScreen" />
        <KeyBinding Key="Escape"
                    Command="media:Commands.EndFullScreen" />
        <KeyBinding Key="Left"
                    Command="media:Commands.SkipBack"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="media:Commands.SkipBack"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Left"
                    Command="media:Commands.SkipBack"
                    CommandParameter="60"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control" />
        <MouseBinding Command="media:Commands.SkipBack"
                      CommandParameter="60"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down"
                                         Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="60"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="60"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up"
                                         Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open"
                        Executed="OpenExecuted" />
        <CommandBinding Command="media:Commands.ToggleFullScreen"
                        Executed="OnToggleFullScreenExecuted" />
        <CommandBinding CanExecute="OnEndFullScreenCanExecute"
                        Command="media:Commands.EndFullScreen"
                        Executed="OnEndFullScreenExecuted" />
        <!--<CommandBinding Command="SystemCommands.CloseWindowCommand" Executed="OnCloseExecuted" />
        <CommandBinding Command="SystemCommands.MinimizeWindowCommand" Executed="OnMinimizeExecuted" CanExecute="OnMinimizeCanExecute"/>
        <CommandBinding Command="SystemCommands.MaximizeWindowCommand" Executed="OnMaximizeExecuted" CanExecute="OnMaximizeCanExecute"/>
        <CommandBinding Command="SystemCommands.RestoreWindowCommand" Executed="OnRestoreExecuted" CanExecute="OnRestoreCanExecute"/>-->
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<Grid Grid.Row="0"
              HorizontalAlignment="Right"
              WindowChrome.IsHitTestVisibleInChrome="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    media:Icon.Geometry="{StaticResource {x:Static media:Geometries.MinimizeWindowGeometryKey}}"
                    Command="SystemCommands.MinimizeWindowCommand"
                    Style="{StaticResource {x:Static media:Styles.SystemButtonStyleKey}}" />
            <Button Grid.Column="1"
                    media:Icon.Geometry="{StaticResource {x:Static media:Geometries.WindowGeometryKey}}"
                    Command="SystemCommands.MaximizeWindowCommand"
                    Style="{StaticResource {x:Static media:Styles.SystemButtonStyleKey}}" />
            <Button Grid.Column="1"
                    media:Icon.Geometry="{StaticResource {x:Static media:Geometries.RestoreWindowGeometryKey}}"
                    Command="SystemCommands.RestoreWindowCommand"
                    Style="{StaticResource {x:Static media:Styles.SystemButtonStyleKey}}" />
            <Button Grid.Column="2"
                    media:Icon.Geometry="{StaticResource {x:Static media:Geometries.CloseGeometryKey}}"
                    Command="SystemCommands.CloseWindowCommand"
                    Style="{StaticResource {x:Static media:Styles.SystemButtonStyleKey}}" />
        </Grid>-->

        <media:MediaElementWrapper x:Name="MediaElement"
                                   Grid.Row="0"
                                   Grid.RowSpan="3"
                                   LoadedBehavior="Play"
                                   MediaFailed="OnMediaFailed"
                                   ScrubbingEnabled="True"
                                   Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type demo:MainWindow}}, Path=MediaFileName}"
                                   Stretch="None" />

        <Grid Grid.Row="2"
              VerticalAlignment="Bottom"
              Background="{DynamicResource {x:Static media:Brushes.SemiTransparentBackgroundBrushKey}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Slider x:Name="ProgressSlider"
                    Grid.Row="0"
                    media:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}"
                    Maximum="{Binding ElementName=MediaElement, Path=Length, Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}"
                    Minimum="0"
                    Style="{StaticResource {x:Static media:Styles.ProgressSliderStyleKey}}"
                    Value="{Binding ElementName=MediaElement, Path=Position, Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}" />

            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}"
                           TargetType="{x:Type Button}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ToggleButton x:Name="PlayPauseButton"
                              Grid.Column="0"
                              IsChecked="{Binding ElementName=MediaElement, Path=IsPlaying}"
                              IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}"
                               TargetType="{x:Type ToggleButton}">
                            <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PauseGeometryKey}}" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PlayGeometryKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton x:Name="ToggleMutedButton"
                              Grid.Column="1"
                              IsChecked="{Binding ElementName=MediaElement, Path=IsMuted, Converter={x:Static uiTestWindows:InvertBoolConverter.Default}}"
                              IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}"
                               TargetType="{x:Type ToggleButton}">
                            <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.UnMuteGeometryKey}}" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.MuteGeometryKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <TextBlock x:Name="ProgressTextBlock"
                           Grid.Column="2"
                           VerticalAlignment="Center"
                           Foreground="{Binding ElementName=ToggleMutedButton, Path=Foreground}"
                           Opacity="{Binding ElementName=ToggleMutedButton, Path=Opacity}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} / {1}">
                            <Binding Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                     ElementName="MediaElement"
                                     Path="Position" />
                            <Binding Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                     ElementName="MediaElement"
                                     Path="Length" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <Button Grid.Column="4"
                        media:Icon.Geometry="{StaticResource {x:Static media:Geometries.FolderOpenGeometryKey}}"
                        Command="ApplicationCommands.Open">
                    <Button.ToolTip>
                        <ToolTip Placement="Top"
                                 Style="{DynamicResource {x:Static media:Styles.ToolTipStyleKey}}">
                            Open a file
                        </ToolTip>
                    </Button.ToolTip>
                </Button>

                <Button Grid.Column="5"
                        Padding="12,6,6,6"
                        HorizontalAlignment="Right"
                        media:Icon.Geometry="{StaticResource {x:Static media:Geometries.FullScreenGeometryKey}}"
                        Command="media:Commands.ToggleFullScreen"
                        IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                    <Button.ToolTip>
                        <ToolTip Placement="Top"
                                 Style="{DynamicResource {x:Static media:Styles.ToolTipStyleKey}}">
                            Full screen
                        </ToolTip>
                    </Button.ToolTip>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
